  [alias]
    c = commit
    s = status
    d = diff
    dc = diff --cached
    ds = diff --staged
    # View all changes in the working tree since this branched off of master
    dm = diff origin/master...HEAD
    # Compare with the remote branch upstream
    du = diff @{upstream}
    a = add
    co = checkout
    b = branch
    ba = branch -a
    # Show local branches with their latest commit and date, ordered from least recently updated to
    # most recently updated (taken from
    # https://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit/5188364#comment46325412_5188364)
    br = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
    bclean = !git branch --merged master | grep -v 'master$' | xargs git branch -d
    l = log
    # Pretty abbreviated git log graph
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    # Pretty abbreviated git log
    lp = log --color --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    # See which commits are not merged since branching from master
    lpm = log --color --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit origin/master..HEAD
    f = fetch
    fp = fetch -p  # prune
    r = reset
    p = pull
    pr = pull --rebase
    prom = pull --rebase origin master
    ps = push
    pom = push origin master
    cp = cherry-pick
    sh = show
    up = !git fetch origin && git rebase origin/master
    # Interactiver rebase from the merge-base
    # (don't replay on latest master https://stackoverflow.com/a/4207357/4543977)
    rb = !git rebase -i `git merge-base HEAD origin/master`
    # Display files affected by a commit (git files <commit_hash>)
    files = diff-tree --no-commit-id --name-status -r
    # Update master branch, prune remote branches, and clean out merged local branches
    mm = !git checkout -q master && git fp && git merge origin/master && git bclean
    # Update master branch, prune remote branches, clean out merged local branches, and switch back
    mclean = !git checkout -q master && git fp && git merge origin/master && git bclean && git checkout -q -
    # Update master branch, prune remote branches, clean out merged local branches, switch back, and rebase
    cr = !git checkout -q master && git fp && git merge origin/master && git bclean && git checkout -q - && git rebase origin/master
  [color]
    ui = auto
  [core]
    editor = vim
    excludesfile = ~/.gitignore_global
  [pager]
    branch = false
    log = false
  [push]
    default = current
  [rerere]
    enabled = 1
